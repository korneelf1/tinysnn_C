#include "../Neuron.h"

// Addition/decay/reset constants as const array here, use pointer in
// configuration struct
float const d_i_hid_1[] = {0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f};
float const d_v_hid_1[] = {0.785591f, 0.000000f, 0.809404f, 0.065673f, 0.390007f, 0.047782f, 0.185668f, 0.577723f, 0.275650f, 0.011919f, 0.711247f, 0.745628f, 0.656750f, 0.377363f, 0.277921f, 0.092659f, 0.401159f, 0.964610f, 0.643807f, 0.116010f, 0.087804f, 0.251190f, 0.981088f, 0.329345f, 0.156780f, 0.525007f, 0.392638f, 0.919647f, 0.751705f, 0.745896f, 0.545796f, 0.214269f, 0.060526f, 0.694277f, 0.201695f, 0.947894f, 0.214402f, 0.521299f, 0.112473f, 0.495480f, 0.786838f, 0.555697f, 0.945036f, 0.125311f, 0.613437f, 0.350803f, 0.828779f, 0.920728f, 0.685244f, 0.597591f, 0.948201f, 0.050084f, 0.960549f, 0.824756f, 0.128189f, 0.137864f, 0.141102f, 0.697358f, 0.796913f, 0.376644f, 0.056868f, 0.160170f, 0.058974f, 0.279198f, 0.275353f, 0.000000f, 0.493170f, 1.000000f, 0.167142f, 0.162052f, 0.234928f, 0.000000f, 0.297520f, 0.720492f, 0.650725f, 0.124797f, 0.763040f, 0.581951f, 0.147223f, 0.000000f, 0.607968f, 0.827424f, 0.557637f, 0.446120f, 0.260676f, 0.247197f, 0.867899f, 0.960476f, 0.432628f, 0.422312f, 0.714514f, 0.164842f, 0.161931f, 0.451082f, 0.603696f, 0.307407f, 0.785609f, 0.914179f, 0.666551f, 1.000000f, 0.671691f, 0.930838f, 0.915226f, 1.000000f, 0.508602f, 0.546189f, 0.137311f, 0.534747f, 0.661989f, 0.000000f, 0.811714f, 0.000000f, 0.329254f, 0.263016f, 0.785459f, 0.000000f, 0.275764f, 0.919738f, 0.737029f, 0.038423f, 0.018149f, 0.058132f, 0.302348f, 0.755049f, 0.992805f, 0.400464f, 0.357047f, 0.786888f, 0.780695f, 0.018455f, 0.158731f, 0.266344f, 0.380892f, 0.378207f, 0.447780f, 0.634963f, 0.553933f, 0.859205f, 0.807197f, 0.882866f, 0.573884f, 0.592505f, 0.009841f, 1.000000f, 0.387048f, 0.428516f, 0.228788f, 0.180003f, 0.298871f, 0.663530f, 0.858024f, 0.496886f, 0.857590f, 0.126373f, 0.125167f, 0.475156f, 0.748962f, 0.445105f, 0.040574f, 0.590275f, 0.550827f, 0.851398f, 0.191639f, 0.091242f, 0.305944f, 0.745411f, 0.588154f, 0.470675f, 0.102533f, 0.211619f, 0.611138f, 0.985724f, 0.882487f, 0.131533f, 0.496465f, 0.671259f, 0.632488f, 0.020993f, 0.000000f, 0.381763f, 0.495793f, 0.513570f, 0.801211f, 0.686283f, 0.655424f, 0.172088f, 0.075420f, 0.667786f, 0.339694f, 0.609905f, 0.354024f, 1.000000f, 0.534174f, 0.722098f, 0.271876f, 0.478391f, 0.458342f, 0.689286f, 0.216172f, 0.332026f, 0.263753f, 0.251282f, 0.197429f, 0.000000f, 0.346803f, 0.094293f, 0.685166f, 0.190408f, 0.552773f, 0.057483f, 0.489784f, 0.438069f, 0.718618f, 0.331257f, 0.566505f, 0.373234f, 0.212768f, 0.490350f, 0.098738f, 0.729758f, 0.700011f, 0.283560f, 1.000000f, 0.539281f, 0.960831f, 0.774414f, 0.663738f, 0.047869f, 0.136874f, 0.487746f, 0.882561f, 0.303658f, 0.218550f, 0.574147f, 0.234302f, 0.780443f, 0.676562f, 0.039535f, 0.203690f, 0.062785f, 0.813745f, 0.058447f, 0.948118f, 0.496226f, 0.598840f, 0.841079f, 0.509020f, 0.674839f, 0.676849f, 0.369068f, 0.088127f, 0.944607f, 0.485446f, 0.531678f, 0.378046f, 0.857674f};
float const t_h_hid_1[] = {0.766809f, 0.202579f, 0.062317f, 0.770406f, 0.327697f, 0.368353f, 0.121699f, 0.741953f, 0.688484f, 0.585279f, 0.159028f, 0.190764f, 0.881215f, 0.926196f, 0.160360f, 0.539383f, 0.559628f, 0.386906f, 0.759256f, 0.202850f, 0.074743f, 0.403048f, 0.488299f, 0.228515f, 0.236778f, 0.702679f, 0.589962f, 0.031155f, 0.639689f, 0.054779f, 0.799757f, 0.803116f, 0.970819f, 0.273297f, 0.843248f, 0.493339f, 0.882462f, 0.903448f, 0.645474f, 0.076408f, 0.389109f, 0.335225f, 0.866621f, 0.311519f, 0.304460f, 0.350236f, 0.588979f, 0.561198f, 0.544499f, 0.100213f, 0.581758f, 0.235650f, 0.700154f, 0.098821f, 0.457991f, 0.307144f, 0.090365f, 0.178024f, 0.772318f, 0.931277f, 0.290009f, 0.647615f, 0.366115f, 0.970186f, 0.696747f, 0.052654f, 0.159550f, 0.487203f, 0.309656f, 0.422238f, 0.621661f, 0.321453f, 0.964400f, 0.631096f, 0.641111f, 0.800544f, 0.705294f, 0.560139f, 0.046758f, 0.699892f, 0.764523f, 0.796678f, 0.349262f, 0.488807f, 0.446135f, 0.326207f, 0.045809f, 0.701613f, 0.859190f, 0.786692f, 0.257944f, 0.823004f, 0.382887f, 0.482293f, 0.296216f, 0.778744f, 0.405659f, 0.091048f, 0.249889f, 0.254660f, 0.085511f, 0.234107f, 0.021177f, 0.254301f, 0.682236f, 0.787027f, 0.253264f, 0.306012f, 0.136268f, 0.757279f, 0.029168f, 0.942309f, 0.716670f, 0.690756f, 0.275814f, 0.354718f, 0.030244f, 0.851859f, 0.639694f, 0.100561f, 0.364623f, 0.805110f, 0.614811f, 0.900026f, 0.571978f, 0.497032f, 0.230428f, 0.418868f, 0.884408f, 0.280791f, 0.625020f, 0.473442f, 0.237482f, 0.481245f, 0.501604f, 0.305339f, 0.583445f, 0.755632f, 0.702108f, 0.386934f, 0.781843f, 0.803810f, 0.210181f, 0.054112f, 0.162093f, 0.610659f, 0.418028f, 0.748543f, 0.562625f, 0.120763f, 0.095819f, 0.134322f, 0.663052f, 0.053281f, 0.216069f, 0.977000f, 0.477484f, 0.603121f, 0.173904f, 0.264723f, 0.192894f, 0.957532f, 0.672795f, 0.364506f, 0.139305f, 0.356501f, 0.149849f, 0.728877f, 0.598358f, 0.106152f, 0.874394f, 0.684271f, 0.700920f, 0.595460f, 0.613391f, 0.627011f, 0.067289f, 0.363889f, 0.075622f, 0.354353f, 0.771868f, 0.143707f, 0.409584f, 0.815509f, 0.853783f, 0.807753f, 0.881574f, 0.520831f, 0.201251f, 0.261101f, 0.078140f, 0.631816f, 0.849409f, 0.495545f, 0.850832f, 0.925780f, 0.194385f, 0.624445f, 0.326343f, 0.417503f, 0.097281f, 0.077766f, 0.633660f, 0.068402f, 0.393566f, 0.817973f, 0.230233f, 0.124653f, 0.684051f, 0.640031f, 0.938537f, 0.246060f, 0.242525f, 0.744905f, 0.175732f, 0.609776f, 0.584543f, 0.051508f, 0.839759f, 0.434132f, 0.556416f, 0.546826f, 0.799488f, 0.884123f, 0.651312f, 0.188579f, 0.015431f, 0.496470f, 0.335846f, 0.073956f, 0.209330f, 0.001350f, 0.714126f, 0.337275f, 0.438756f, 0.392483f, 0.902089f, 0.094104f, 0.593207f, 0.376390f, 0.061064f, 0.044785f, 0.374468f, 0.959487f, 0.454068f, 0.582414f, 0.366395f, 0.647656f, 0.688049f, 0.119864f, 0.455286f, 0.719262f, 0.824701f, 0.311440f, 0.868638f, 0.187273f};
// size,d_i, d_v, th, v_rest
NeuronConf const conf_hid_1 = {256, 1, d_i_hid_1, d_v_hid_1, t_h_hid_1, 0.0f};