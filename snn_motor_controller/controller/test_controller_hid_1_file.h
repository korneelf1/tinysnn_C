#include "../Neuron.h"

// Addition/decay/reset constants as const array here, use pointer in
// configuration struct
float const d_i_hid_1[] = {0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f};
float const d_v_hid_1[] = {0.207777f, 0.362195f, 0.599334f, 0.791889f, 0.694472f, 0.000000f, 0.576726f, 0.285891f, 0.155889f, 0.043214f, 0.805898f, 0.457721f, 0.661645f, 0.862150f, 0.551697f, 0.686205f, 0.464072f, 0.926369f, 0.370962f, 0.785404f, 0.777534f, 0.244878f, 0.751711f, 0.254358f, 0.867505f, 0.881148f, 0.700217f, 0.300731f, 0.433217f, 0.665144f, 0.385574f, 0.232168f, 0.172231f, 0.600845f, 0.413617f, 0.964815f, 0.465122f, 0.868366f, 0.468990f, 0.086688f, 0.202524f, 0.000000f, 0.660555f, 0.931773f, 0.559844f, 0.254984f, 0.348427f, 0.635276f, 0.596417f, 0.435678f, 0.857947f, 0.087603f, 0.308392f, 0.480884f, 0.484737f, 0.607100f, 0.116740f, 0.468001f, 0.088363f, 0.969226f, 0.806293f, 0.276319f, 0.445236f, 0.583452f, 0.063125f, 0.781252f, 0.352424f, 0.427619f, 0.035866f, 0.922601f, 0.521002f, 0.641638f, 0.798299f, 0.324031f, 0.837245f, 0.676681f, 0.437054f, 0.922290f, 0.360458f, 0.573948f, 0.836456f, 0.932959f, 0.977594f, 0.582525f, 0.539683f, 0.889154f, 0.725861f, 0.129754f, 0.853646f, 0.134173f, 0.800150f, 0.038802f, 0.605049f, 0.782471f, 0.431584f, 0.219025f, 0.778107f, 0.527958f, 0.462920f, 0.752331f, 0.796716f, 0.164427f, 0.216940f, 0.853547f, 0.386908f, 0.252308f, 0.922871f, 0.264899f, 0.312791f, 0.775241f, 0.346000f, 0.643887f, 0.930595f, 0.385536f, 0.897121f, 0.584659f, 0.157471f, 0.862957f, 0.670514f, 0.873327f, 0.968201f, 0.990271f, 0.421477f, 0.782977f, 0.809737f, 0.259236f, 0.307968f, 0.588561f, 0.179379f, 0.504596f, 0.465516f, 0.607833f, 1.000000f, 0.937009f, 0.879534f, 0.683986f, 0.990935f, 0.871995f, 0.041212f, 0.977787f, 0.206742f, 0.173106f, 0.491568f, 0.753303f, 0.576653f, 0.797512f, 0.046429f, 0.154284f, 0.515073f, 0.282736f, 0.613596f, 0.893150f, 0.706856f, 0.909733f, 0.984108f, 0.949692f, 0.662037f, 0.557487f, 0.680524f, 0.439519f, 0.983727f, 0.512040f, 0.934029f, 0.569652f, 0.808538f, 0.991057f, 0.399751f, 0.408534f, 0.169608f, 0.165064f, 0.191006f, 0.420088f, 0.198203f, 0.374132f, 0.972094f, 0.957692f, 0.090289f, 0.654618f, 0.400453f, 0.631758f, 0.875973f, 0.633480f, 1.000000f, 0.046870f, 0.482730f, 0.843136f, 0.955672f, 0.230401f, 0.444731f, 0.843272f, 1.000000f, 0.417589f, 0.403595f, 0.383188f, 0.829096f, 0.087379f, 0.378307f, 0.818269f, 0.769094f, 0.223208f, 0.032700f, 0.769595f, 0.735268f, 0.736466f, 0.747772f, 0.060561f, 0.105456f, 0.134844f, 0.755724f, 0.903977f, 0.152983f, 0.895135f, 0.213616f, 0.380177f, 0.778959f, 0.004804f, 0.274929f, 0.494386f, 0.954156f, 0.319708f, 0.685634f, 0.057990f, 0.402271f, 0.552772f, 0.473100f, 0.421936f, 0.086169f, 0.914750f, 0.125718f, 0.419753f, 0.364627f, 0.117166f, 0.595805f, 0.944747f, 0.719192f, 0.139841f, 0.211253f, 0.407015f, 0.333215f, 0.730601f, 0.314113f, 0.426184f, 0.360972f, 0.290424f, 0.525106f, 0.991800f, 0.147716f, 0.200710f, 0.236266f, 0.543288f, 0.184849f, 0.550239f, 0.460328f, 0.588450f, 0.052567f, 0.481803f};
float const t_h_hid_1[] = {0.381681f, 0.662717f, 0.849530f, 0.808330f, 0.519283f, 0.907308f, 0.565405f, 0.930347f, 0.400861f, 0.687093f, 0.964137f, 0.739486f, 0.753301f, 0.297975f, 0.382322f, 0.797368f, 0.337764f, 0.615989f, 0.719631f, 0.833736f, 0.460642f, 0.672293f, 0.481193f, 0.507523f, 0.146461f, 0.389271f, 0.335300f, 0.515870f, 0.836456f, 0.213645f, 0.447837f, 0.807651f, 0.128744f, 0.812701f, 0.346266f, 0.938001f, 0.882671f, 0.102105f, 0.461508f, 0.876924f, 0.438085f, 0.405046f, 0.207105f, 0.672190f, 0.271914f, 0.603183f, 0.833425f, 0.038063f, 0.866576f, 0.640945f, 0.361930f, 0.631988f, 0.164559f, 0.909206f, 0.346020f, 0.540540f, 0.458194f, 0.856254f, 0.312783f, 0.294285f, 0.438779f, 0.572035f, 0.791085f, 0.062703f, 0.004742f, 0.485098f, 0.126034f, 0.178726f, 0.954418f, 0.341006f, 0.102705f, 0.184365f, 0.228811f, 0.677288f, 0.702757f, 0.020979f, 0.761957f, 0.451317f, 0.213348f, 0.578557f, 0.881583f, 0.142122f, 0.462909f, 0.283950f, 0.726130f, 0.261685f, 0.054194f, 0.160706f, 0.543046f, 0.879244f, 0.190425f, 0.300362f, 0.112921f, 0.651255f, 0.569654f, 0.918052f, 0.051584f, 0.754642f, 0.848798f, 0.411842f, 0.593193f, 0.758168f, 0.234549f, 0.812296f, 0.313660f, 0.659460f, 0.383966f, 0.614694f, 0.806855f, 0.215626f, 0.463998f, 0.673848f, 0.968097f, 0.257127f, 0.000000f, 0.736659f, 0.137314f, 0.882434f, 0.498724f, 0.833398f, 0.850570f, 0.930042f, 0.763293f, 0.463595f, 0.852040f, 0.464517f, 0.414571f, 0.597382f, 0.178207f, 0.843454f, 0.835439f, 0.470499f, 0.766738f, 0.049272f, 0.271217f, 0.795119f, 0.516680f, 0.237203f, 0.727951f, 0.430848f, 0.658999f, 0.465922f, 0.388850f, 0.376062f, 0.464430f, 0.916266f, 0.308626f, 0.895867f, 0.616756f, 0.254480f, 0.615237f, 0.791429f, 0.979880f, 0.970363f, 0.323490f, 0.499824f, 0.811500f, 0.462729f, 0.187195f, 0.873108f, 0.432965f, 0.385253f, 0.671838f, 0.869135f, 0.564772f, 0.969477f, 0.642967f, 0.146990f, 0.987731f, 0.968585f, 0.134386f, 0.295596f, 0.937241f, 0.976751f, 0.639874f, 0.048912f, 0.437780f, 0.693873f, 0.070848f, 0.065413f, 0.802664f, 0.956233f, 0.176586f, 0.300604f, 0.509169f, 0.799542f, 0.002896f, 0.177980f, 0.286662f, 0.977956f, 0.508110f, 0.549715f, 0.529944f, 0.169366f, 0.205143f, 0.000000f, 0.077986f, 0.706937f, 0.337347f, 0.162408f, 0.284797f, 0.078451f, 0.228438f, 0.101604f, 0.677867f, 0.497090f, 0.829702f, 0.368790f, 0.548424f, 0.253100f, 0.472950f, 0.000000f, 0.555329f, 0.392238f, 0.248782f, 0.315093f, 0.852492f, 0.306153f, 0.739005f, 0.062024f, 0.000000f, 0.765643f, 0.900022f, 0.000000f, 0.721249f, 0.739853f, 0.912301f, 0.388808f, 0.733265f, 0.932951f, 0.855652f, 0.328780f, 0.238863f, 0.857595f, 0.436135f, 0.486985f, 0.626581f, 0.326648f, 0.435955f, 0.723860f, 0.731920f, 0.403555f, 0.284077f, 0.177565f, 0.041894f, 0.336897f, 0.744220f, 0.984600f, 0.956062f, 0.869779f, 0.331983f, 0.643741f, 0.781237f, 0.893218f, 0.631540f, 0.655518f};
// size,d_i, d_v, th, v_rest
NeuronConf const conf_hid_1 = {256, 1, d_i_hid_1, d_v_hid_1, t_h_hid_1, 0.0f};